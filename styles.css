#conteinerDiv {
  display: grid;
  grid-template-columns: 1fr 3fr;
  /*GRID em 2 colunas a primeira ocupara 1/4 e a segunda 3/4*/
  grid-template-rows: auto 1fr auto;
  /*GRID em 3 linhas a primeira e a utima vão se ajustar automaticamente conforme os elemementos internos precisarem, e a linha central terá o restante do espaço */
  grid-template-areas:
    "header header"
    "nav main"
    "footer footer";
  grid-gap: 1em;
}

.cabecalhoDiv {
  display: flex;
  /*Organiza os elemento (Logo - Busca - Carinho/Login)*/
  flex-direction: row;
  justify-content: space-around;
  /*Espaçamento entre os elementos */
  grid-area: header;
  /*Area que o cabeçalho ocupa no container pai*/
}

.navegacaoDiv {
  display: flex;
  /*Organiza a elementos da barra latera (Lista Caregorias - Outros elementos)*/
  flex-direction: column;
  grid-area: nav;
  /*Area que o cabeçalho ocupa e no container pai*/
}

.mainDiv {
  display: grid;
  /*Organiza a lista de card de produtos em Grid*/
  grid-area: main;
  /*Area que o cabeçalho ocupa e no container pai*/
}

.rodapeDiv {
  height: 80px;
  grid-area: footer;
}

.logoDiv img {
  height: 100px;
  width: auto;
}

.buscaDiv {
  width: 60%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.buscaInput {
  height: 30%;
  width: 90%;
}

.acoesDiv {
  display: flex;
  align-items: center;
  justify-content: center;
}

.btnGeral {
  width: 40px;
  height: 40px;
}

.visualizarBorda {
  border: 2px solid red;
  /*Só para ajudar a visualizar*/
}

.filtros dt button {
  position: relative;
  /*Elemento fica no mesmo lugar que estaria, mas agora serve de referência para filhos absolute.*/
  width: 100%;
  /* Faz o botão ocupar toda a largura do <dt>*/
  text-align: left;
  font-weight: bold;
  cursor: pointer;
  /* Mostra a mãozinha ao passar o mouse (indica clicável) */
  background-color: #eee;
  border: none;
  /* Remove a borda padrão do botão */
  padding: 8px;
  /* Dá espaço interno de 8px em todos os lados */
}

/* Indicador de seta usando ::after 
::after é um pseudo-elemento. Ele cria uma “caixinha” virtual depois do conteúdo do botão,
sem precisar colocar HTML extra. Serve para colocar ícones, setas,textos adicionais apenas via CSS.*/
.filtros dt button::after {
  content: "▸";
  /*Define o conteúdo do pseudo-elemento.*/
  position: absolute;
  /*Posiciona o pseudo-elemento absolutamente em relação ao botão, isso permite colocar ele no canto direito do botão, sem afetar o fluxo do texto.*/
  right: 10px;
  /*Move o pseudo-elemento 10px da borda direita do botão.*/
  transition: transform 0.2s;
  /*Adiciona uma animação suave quando a propriedade transform mudar.*/
}

/* Quando estiver ativo, rotaciona a seta para baixo */
.filtros dt button.ativo::after {
  transform: rotate(90deg);
  /*Quando o botão tem a classe ativo,
    o pseudo-elemento (::after) gira 90°*/
}

.filtros dd {
  margin: 0;
  /* Remove qualquer espaço externo do <dd> */
  padding: 8px 16px;
  /* Espaço interno: 8px em cima/baixo e 16px nas laterais */
  background-color: #f9f9f9;
}

.opcoes {
  display: flex;
  flex-direction: column;
}