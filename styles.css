#conteiner {
  display: grid;
  grid-template-columns: 1fr 6fr;
  /*GRID em 2 colunas a primeira ocupara 1/4 e a segunda 3/4*/
  grid-template-rows: auto 1fr auto;
  /*GRID em 3 linhas a primeira e a utima vão se ajustar automaticamente conforme os elemementos internos precisarem, e a linha central terá o restante do espaço */
  grid-template-areas:
    "header header"
    "nav main"
    "footer footer";
  grid-gap: 1em;
}

.cabecalho {
  display: flex;
  /*Organiza os elemento (Logo - Busca - Carinho/Login)*/
  flex-direction: row;
  justify-content: space-between;
  /*Espaçamento entre os elementos */
  grid-area: header;
  /*Area que o cabeçalho ocupa no container pai*/
  padding: 0 30px;
  position: sticky;
  top: 0;
  background-color: #ffffff;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
  gap: 10px;
  z-index: 1000;
  /*Define a “camada” do elemento,
    ou seja,
    qual elemento fica por cima de outros. Quanto maior o valor,
    mais na frente ele aparece. No caso,
    o cabeçalho não sera coberto por outros elementos da página quando rola para baixo.*/
}

.logo img {
  width: auto;
  height: 100%;
  max-height: 90px;
  border-radius: 4px;
}

.busca {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  max-width: 600px;
  gap: 5px;
}

.buscaInput {
  flex: 1;
  padding: 8px 12px;
  border: 1px solid #ccc;
  border-radius: 25px;
  outline: none;
  font-size: 14px;
  transition: border-color 0.2s, box-shadow 0.2s;
}

.buscaInput:focus {
  border-color: #007bff;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
}

.btnGeral {
  width: 40px;
  height: 40px;
  border: none;
  background-color: #007bff;
  color: #fff;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s, transform 0.2s;
}

.btnGeral:hover {
  background-color: #0056b3;
  transform: scale(1.1);
}

.acoes {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}

/* Ícones internos (Material Icons) */
.material-icons {
  font-size: 20px;
}

.navegacao {
  display: flex;
  /*Organiza a elementos da barra latera (Lista Caregorias - Outros elementos)*/
  flex-direction: column;
  grid-area: nav;
  padding-left: 18px;
}

.filtros {
  width: 250px;
  border: 1px solid #ddd;
  border-radius: 8px;
  overflow: hidden;
  font-family: Arial, sans-serif;
  background-color: #fff;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
}

.filtros dt button {
  position: relative;
  /*Elemento fica no mesmo lugar que estaria, mas agora serve de referência para filhos absolute.*/
  width: 100%;
  /* Faz o botão ocupar toda a largura do <dt>*/
  text-align: left;
  font-weight: bold;
  cursor: pointer;
  /* Mostra a mãozinha ao passar o mouse (indica clicável) */
  background-color: #f5f5f5;
  border: none;
  /* Remove a borda padrão do botão */
  padding: 10px 30px 10px 10px;
  padding-right: 30px;
  transition: background-color 0.2s;
  border-bottom: 1px solid #ddd;
  font-size: 14px;
  color: #333;
}

.filtros dt button:hover {
  background-color: #e0e0e0;
}

/* Indicador de seta usando ::after 
::after é um pseudo-elemento. Ele cria uma “caixinha” virtual depois do conteúdo do botão,
sem precisar colocar HTML extra. Serve para colocar ícones, setas,textos adicionais apenas via CSS.*/
.filtros dt button::after {
  content: "▸";
  /*Define o conteúdo do pseudo-elemento.*/
  position: absolute;
  /*Posiciona o pseudo-elemento absolutamente em relação ao botão, isso permite colocar ele no canto direito do botão, sem afetar o fluxo do texto.*/
  right: 10px;
  /*Move o pseudo-elemento 10px da borda direita do botão.*/
  transition: transform 0.2s;
  /*Adiciona uma animação suave quando a propriedade transform mudar.*/
  color: #6c6b6b;
}

/* Quando estiver ativo, rotaciona a seta para baixo */
.filtros dt button.ativo::after {
  transform: rotate(90deg);
  /*Quando o botão tem a classe ativo,
    o pseudo-elemento (::after) gira 90°*/
  color: #323131;
}

.filtros dd {
  /* Remove qualquer espaço externo do <dd> */
  padding: 8px 16px;
  /* Espaço interno: 8px em cima/baixo e 16px nas laterais */
  background-color: #fafafa;
  border-bottom: 1px solid #ddd;
}

.filtros .opcoes {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.filtros label {
  display: flex;
  align-items: center;
  gap: 6px;
  white-space: nowrap;
  font-size: 14px;
  cursor: pointer;
  padding: 4px 6px;
  border-radius: 5px;
  /*evita que o texto quebre em outra linha */
}

.filtros label:hover {
  background-color: #e6f0ff;
}

.filtros input[type="checkbox"] {
  accent-color: #007bff;
  width: 16px;
  height: 16px;
}

.opcoes {
  display: flex;
  flex-direction: column;
}

.gridProd {
  display: grid;
  grid-area: main;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  grid-auto-rows: 520px;
  /*Cada card ocupa no mínimo 250px. Se houver espaço,mais colunas são adicionadas automaticamente. 1fr (uma fração) faz os cards crescerem igualmente para preencher a linha.*/
  gap: 1.5rem;
  /*espaço entre cards*/
  padding: 1rem;
}

.cardProduto {
  display: flex;
  flex-direction: column;
  background-color: #fff;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  transition: transform 0.2s, box-shadow 0.2s;
  border-radius: 8px;
  overflow: visible;
  gap: 12px;
  padding: 18px;
  cursor: pointer;
  max-width: 290px;
}

.cardProduto:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.imagemProd {
  width: 100%;
  height: auto;
  max-width: 250px;
  /* define um limite de largura */
  border-radius: 8px;
  display: block;
  /*Ocupa toda a largura da linha, por padrõa a img é inline: só ocupa o tamanho necessário para o seu conteúdo*/
  margin: 0 auto;
  /*Especifica 0 em cima e embaixo,
    e auto só nas laterais (esquerda/direita). Isso garante que só seja centralizado na horizontal.*/
}

.avaliacaoProd {
  font-size: 16px;
}

.cardProduto p {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  min-height: fit-content;
  /* garante altura mínima suficiente pro texto */
}

.nomeProd {
  font-weight: bold;
  font-size: 16px;
  overflow: hidden;
  text-overflow: ellipsis;
}

.descricaoProd {
  font-size: 14px;
  color: #666;
}

.listaTagProd {
  display: flex;
  flex-wrap: wrap;
  gap: 5px;
}

.tagProd {
  background-color: #f0f0f0;
  color: #555;
  font-size: 12.5px;
  padding: 3px 6px;
  border-radius: 4px;
}

.precosProd {
  display: grid;
  gap: 4px;
  margin-top: auto
    /*O navegador vai empurrar o elemento o máximo que conseguir para baixo dentro do card*/
}

.precosProd .pSimples {
  font-size: 12px;
  color: #999;
}

.precosProd .pPreco {
  font-size: 18px;
  font-weight: bold;
  color: #3360d3;
  margin: 2px 0;
}

.precosProd .pCondPreco {
  font-size: 12px;
  color: #666;
}

.rodape {
  height: 80px;
  grid-area: footer;
}

/*Ideia é colocar aqui o que for estilizar o rodapé*/


* {
  margin: 0px;
  /*Remove todas as margens padrão dos elementos (h1, p, ul, body, etc).*/
  padding: 0px;
  /*Remove o espaçamento interno padrão*/
  box-sizing: border-box;
  /*Muda como o navegador calcula largura e altura.
  Padrão: content-box → largura = apenas o conteúdo (padding e border somam por fora). 
  Com border-box: largura = conteúdo + padding + borda já incluídos.*/
}

body {
  font-family: Arial, sans-serif;
}

.visualizarBorda {
  border: 2px solid red;
  /*Só para ajudar a visualizar*/
}


/* Celular*/
@media (max-width: 600px) {
  #conteiner {
    grid-template-columns: 1fr;
    grid-template-areas:
      "header"
      "main"
      "footer";
  }

  .navegacao {
    display: none;
  }

  .cabecalho {
    gap: 10px;
    justify-content: flex-start;
  }

  .buscaInput {
    display: none;
  }
}

/* Tablet*/
@media (max-width: 1024px) {}

/* Desktop*/
@media (max-width: 1440px) {}